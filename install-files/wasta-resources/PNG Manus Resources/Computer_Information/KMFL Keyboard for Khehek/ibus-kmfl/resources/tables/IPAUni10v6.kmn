c IPAUni10.KMN
c IPA Unicode Keyboard for Tavultesoft Keyboard Manager 5.0
c Keyboard: FF Keying for use with SIL Unicode IPA fonts
c Author:   M. Hosken & D. Bevan
c Date:     31-JUL-2001
c
c Changes:
c IPA.KMN
c MJPH  1.0     15-Apr-1994     initial version
c MJPH  1.0.2   18-May-1994     sort out i-widths
c MJPH  1.0.3   26-May-1994     change hotkey from Ctrl+Shift+I to
c                               Ctrl+Shift+P. Since Ctrl+Shift+I is the italic
c                               speedkey in WinWord
c MJPH  1.1.0   28-Sep-1994     add BS support for 3.1
c MJPH  1.1.1   28-Nov-1994     add generic BS rule to get round 3.1 bug
c MJPH  1.1.2   13-Feb-1995     reverse rounded and unrounded
c                               support #<<, #>>, #==, @&, auto tone height
c                               [[[ is OK
c DIB   1.2     20-Feb-1995     add d203 (extra low 'advanced' diac) support
c                               fix @04 and @40 to give extra-high versions
c                               make auto tone height work with ldiacs
c                               fix tone height above d040
c                               allow tone above angstrom
c                               fix schwa+[[ bug
c                               fix ~ beep
c IPA93.KMN
c DIB   1.0     17-Jul-1996     make changes for new IPA93 fonts
c MJPH  2.0     25-AUG-2000     Add Unicode support, including upper case, etc.
c MJPH  2.1     17-OCT-2000     Remove some bugs from Unicode keyboard
c MJPH  2.1.1   25-JUL-2001     Add U to store references in 2 Unicode rules (minor)
c
c ipaUni10.kmn
c MJPH  1.0     31-JUL-2001     Remove ANSI keyboard. Change name
c MJPH  1.0.1   27-AUG-2001     Tidy up for release. ? > ?
c MJPH  1.0.2   23-APR-2002     Add g< > U+0261

NAME "IPA Unicode 1.0"
VERSION 6.0
c BITMAPS IPA93ON IPA93OFF
BITMAP "IPA93.bmp"
HOTKEY  "^+P"

store(&MnemonicLayout) "1"        c This keyboard uses a mnemonic layout.

begin Unicode > use(Unicode)

store( &Copyright ) "Copyright © 2002 SIL International"
store( &Message ) "http://www.sil.org/computing/fonts"

c need to include international keyboards in this list also
store(nonK) "ACDFJKMPSTVWXYZ`|<>0123456789=^&*()';" "œ"
store(notrans) "abcdefghijklmnopqrstuvwxyz- /"

store(singleK) "BEHILNOQRU.#?!:}_"
store(singleU) "BEHILNOQRU.#?" U+01C3 U+02D0 U+02C8 U+0320

c store(equalK) "BEGHILNOQRU#?.!abcdefghijlnoprstuvwxyz" "#="
  store(equalD) "BEGHILNO" "QRU#?." U+01C3 "abcdefghi" "jlnoprst" "uvwxyz" U+203F
  store(equalU) U+0299 U+0258 U+0262 U+029C U+0268 U+029F U+0274 U+0275 \
                U+02A1 U+0280 U+0289 U+203F U+0294 U+2016 U+01C2 \
                U+0251 U+03B2 U+00E7 U+00F0 U+0259 U+0278 U+0263 U+0265 U+026A \
                U+025F U+026C U+0272 U+0252 U+0298 U+0279 U+0283 U+03B8 \
                U+026F U+028B U+028D U+03C7 U+028F U+0292 U+203F

c store(greatK) "EGHLOR#!abdeghjlmnoruwz" "#>"
  store(greatD) "EGHLOR#" U+01C3 "abdeghjlmnoruwz" U+2191           c "ptckq"
  store(greatU) U+0276 U+029B U+0267 U+027A U+0264 U+0281 U+2191 U+01C1 \
                U+0250 U+0253 U+0257 U+025C U+0260 U+0127 U+0284 U+026E \
                U+0271 U+014B U+00F8 U+027E U+028C U+0270 U+0291 U+2197
c               U+01A5 U+01AD U+0188 U+0199 U+02A0

c store(lessK)  "ELOQR?.#!acdehjlnorstuz" "#<"
  store(lessD)  "ELOQR" "?.#" U+01C3 "acdeghjlnorstuz" U+2193
  store(lessU)  U+0153 U+028E U+029A U+02A2 U+027B U+0295 U+007C U+2193 \
                U+01C0 U+00E6 U+0255 U+0256 U+025B U+0261 U+0266 U+029D U+026D \
                U+0273 U+0254 U+027D U+0282 U+0288 U+028A U+0290 U+2198

c  store(hatK)  "?gjnwlh" "0123456789-" "m" "n=" "n>"
   store(hatD)  U+0295 U+0263 "jnwlh" "0123456789-" "m" U+0272 U+014B
   store(hatU)  U+02E4 U+02E0 U+02B2 U+207F U+02B7 U+02E1 U+02B0 \
                U+2070 U+00B9 U+00B2 U+00B3 U+2074 U+2075 U+2076 U+2077 U+2078 U+2079 U+207B \
                U+F180 U+F181 U+F182

store(ldiaK) "+_%${"
store(ldiaU) U+031F U+0331 U+0325 U+0329 U+032A

store(udiaK) '~"'
store(udiaU) U+0303 U+0308 U+033D U+0306 U+030A

store(toneU) U+030F U+030C U+0300 U+0304 U+0301 U+0302 U+030B

store(segmentU) U+02E9 U+02E8 U+02E7 U+02E6 U+02E5 U+2191 U+2193 U+2197 \
                U+2198 U+02D0 U+02D1 U+207F U+02DE U+02BC U+031A U+005B \
                U+005C U+005D U+02C8 U+02CC U+0361 U+203F

store(fenceU) U+02E5 U+02E6 U+02E7 U+02E8 U+02E9

group(Unicode) using keys

c handle ~~ for centre tilde
U+0303 + '~' > U+0334

c handle " (upper diacritic)
U+0308 + '"' > U+033D
U+033D + '"' > U+0306
U+0306 + '"' > U+030A

c handle $ (lower diacritic)
U+0329 + '$' > U+032F
U+032F + '$' > U+0330  
U+0330 + '$' > U+0329

c handle { (lower diacritic)
U+032A + '{' > U+033A
U+033A + '{' > U+033B
U+033B + '{' > U+033C 
U+033C + '{' > U+032A

c handle % (lower diacritic)
U+0325 + '%' > U+032C
U+032C + '%' > U+0324
U+0324 + '%' > U+0325

c #0 #1 #2 #3 #4 #02 #20 #42 #24 #04 #40
c d202 is tiny space :-( which is mapped to the # key
any(fenceU) + "0" > context U+02E9
any(fenceU) + "1" > context U+02E8
any(fenceU) + "2" > context U+02E7
any(fenceU) + "3" > context U+02E6
any(fenceU) + "4" > context U+02E5

'#' + "0" > U+02E9
'#' + "1" > U+02E8
'#' + "2" > U+02E7
'#' + "3" > U+02E6
'#' + "4" > U+02E5

'#' + "&" > U+0361
c @& for overlink
U+030A + "&" > U+0361

c handle ::
U+02D0 + ":" > U+02D1
U+02D1 + ":" > U+02D0 U+02D0

c handle [[ which is really [[[
"[" + "[" > U+02DE
U+02DE + "[" > context

c handle ]] and ]]]
"]" + "]" > U+02BC
U+02BC + "]" > U+031A

c handle }}
U+02C8 + "}" > U+02CC

c Now all the diacritics

c @
c o-width first
U+030A + "0" > U+030F
U+030F + "0" > U+030F
U+030F + "4" > U+030C

c any(high) "*" + "1" > index(high,1) d152
c any(high) any(ldia) "*" + "1" > index(high,1) index(ldia, 2) d152
U+030A + "1" > U+0300
U+0300 + "1" > U+0300
U+0300 + "3" > U+030C

U+030A + "2" > U+0304
U+0304 + "2" > U+0304

U+030A + "3" > U+0301
U+0301 + "3" > U+0301
U+0301 + "1" > U+0302

U+030A + "4" > U+030B
U+030B + "4" > U+030B
U+030B + "0" > U+0302

c + and _ sequences
U+031F + "+" > U+031D
U+031D + "+" > U+0318
U+0318 + "+" > U+0339
U+0339 + "+" > U+031F

U+0320 + "_" > U+031E
U+031E + "_" > U+0319
U+0319 + "_" > U+031C                      
U+031C + "_" > U+0320

c General rules
    + any(singleK) > index(singleU,1)
any(equalD) + "="  > index(equalU,1)
any(greatD) + ">"  > index(greatU,1)
any(lessD)  + "<"  > index(lessU,1)
any(hatD)   + "^"  > index(hatU,1)

c lower diacritic
any(segmentU) + any(ldiaK) > context beep
any(udiaU) + any(ldiaK) > context beep
any(ldiaU) + any(ldiaK) > context beep
any(toneU) + any(ldiaK) > context beep
          + any(ldiaK) > index(ldiaU,1)

c upper diacritic
any(segmentU) + any(udiaK) > context beep
any(toneU) + any(udiaK) > context beep
any(udiaU) + any(udiaK) > context beep
          + any(udiaK) > index(udiaU,1)

c tones
any(toneU)    + "@" > context beep
any(segmentU) + "@" > context beep
              + "@" > U+030A

